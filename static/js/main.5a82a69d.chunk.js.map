{"version":3,"sources":["components/header.jsx","components/auth.js","components/firebase.js","components/signIn.jsx","components/dashboard/student.jsx","components/dashboard/admin.jsx","components/dashboard.jsx","components/subject.js","components/dashboard/addStudent.jsx","components/dashboard/addTest.jsx","components/student.js","components/test.js","components/sort.js","components/dashboard/allTest.jsx","components/dashboard/displayMarks.jsx","components/dashboard/std_testMarks.jsx","components/dashboard/std_compareMarks.jsx","components/dashboard/compareMarks.jsx","components/comingSoon.jsx","components/dashboard/contact.jsx","components/dashboard/rmvStd.jsx","components/dashboard/rmvTst.jsx","App.js","reportWebVitals.js","components/footer.jsx","index.js"],"names":["Header","className","src","alt","Component","this","currentUser","id","type","cb","pr","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Signin","props","useState","members","setMembers","action","elm","document","getElementById","value","checkWord","password","key","i","length","useEffect","a","db","firestore","collection","get","data","docs","map","doc","fetchData","window","scrollTo","htmlFor","required","onChange","onClick","user","found","member","forEach","Username","Password","auth","login","history","push","alert","Student","menu","index","name","link","pic","elements","block","exact","to","Fragment","Admin","Dashboard","useHistory","isAuthenticated","checkLog","substring","logout","AddStudent","subjects","Subjects","getSubjects","getMembers","placeholder","Object","keys","subject","sub","getElementsByClassName","std","Class","set","then","flag","checked","split","update","AddTest","tests","getTests","dt","tm","marks","test","maxMarks","date","time","students","student","currentTest","testDetails","total","tesName","exam","processTime","time1","time2","temp","testArray","timeStem","testName","arrangedTests","thisTest","j","parseInt","studentName","studentMarks","arranged","stud","Students","setStudents","AllTest","getStud","exams","accumulate","ArrangedExam","Sort","reOrderTests","examination","getHtml","innerHTML","doIt","addEventListener","Tests","setTest","holder","style","width","height","border","margin","padding","borderRadius","boxShadow","overflow","textAlign","fontSize","setHolderStyle","arrangeHtmlElements","setErrMessageStyle","DisplayMarks","getStudents","getTest","reOdrderStudent","defaultValue","display","doUnmask","Std_testMarks","num","getMarks","st","Std_compareMarks","CompareMarks","min","max","readOnly","ComingSoon","Contact","RmvStudent","shisya","sishya","removedSet","catch","RmvTest","App","path","component","addStudent","addTest","allTest","displayMarks","removeStd","removeTst","comingSoon","std_testMarks","std_compareMarks","compareMarks","contact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","ReactDOM","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.5a82a69d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './styles/headerStyle.css';\r\nclass Header extends Component{\r\n  render() {\r\n    return (\r\n        <div className=\"head\"> \r\n          <img className='logo' src='logo.png' alt='logo'></img>\r\n          <div>\r\n                  <h1 className='inst'>NAVASIKSHAN ERAS</h1>\r\n                  <h2 className='inst'>A New Verge Of Learning...</h2>\r\n          </div>\r\n        </div> \r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","class Auth{\r\n    constructor(){\r\n        this.currentUser={\r\n            id:'',\r\n            type:''\r\n        }\r\n    }\r\n    login(cb,id, type){\r\n        const pr=this.currentUser;\r\n        pr.id=id;\r\n        pr.type=type;\r\n        cb();\r\n    }\r\n    logout(){\r\n        const pr=this.currentUser;\r\n        pr.id='';\r\n        pr.type='';\r\n    }\r\n    isAuthenticated(){\r\n        return this.currentUser;\r\n    }\r\n\r\n}\r\nexport default new Auth()","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCJLwDGid-UH2ktssSjI_C6wfh1nGuUllg\",\r\n    authDomain: \"navasikshan-eras-edc75.firebaseapp.com\",\r\n    projectId: \"navasikshan-eras-edc75\",\r\n    storageBucket: \"navasikshan-eras-edc75.appspot.com\",\r\n    messagingSenderId: \"555698155722\",\r\n    appId: \"1:555698155722:web:6b698d0e82f7d54f788433\",\r\n    measurementId: \"G-TEWRTPZLKC\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n  \r\nexport default firebase;","import React,{ useEffect, useState } from 'react';\r\nimport auth from './auth';\r\nimport firebase from './firebase';\r\nimport './styles/signInStyle.css';\r\nfunction Signin(props) {\r\n    const[members, setMembers]=useState([]);\r\n  \r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n        const db = firebase.firestore();\r\n        const data = await db.collection(\"members\").get()\r\n        setMembers(data.docs.map(doc => doc.data()));\r\n        }\r\n        fetchData();\r\n    },[]);\r\n function action(id){\r\n    const elm = document.getElementById(id);\r\n    if(elm.value === '')\r\n      elm.className = 'inpt contract';\r\n    else\r\n      elm.className = 'inpt expand';\r\n  }\r\n  function checkWord(password, key) {\r\n        let i;\r\n        for (i = 0; i < key.length; i++)\r\n        {\r\n            if (password[i] !== key[i])\r\n                return false;\r\n        }\r\n        return key;\r\n    }\r\n  function verify(){\r\n    const user = document.getElementById('User').value;\r\n    const password = document.getElementById('Pass').value;\r\n    let member, found = 0;;\r\n    if(user && password)\r\n    {\r\n        member=members.map(member => (\r\n            member\r\n        ));\r\n        member.forEach(member => {\r\n            if (member.Username === user) {\r\n                found = 1;\r\n                if (member.Password === password) {\r\n                    let type;\r\n                    type = checkWord(password, 'admin')\r\n                    if (type)\r\n                        auth.login(() => { props.history.push('/dashboard') }, user, type);\r\n                    else {\r\n                        type = checkWord(password, 'student')\r\n                        if (type)\r\n                            auth.login(() => { props.history.push('/dashboard') }, user, type);\r\n                    }\r\n                    return;\r\n                }\r\n                else\r\n                    alert(\"Password Mismatch!!\");\r\n            }\r\n            \r\n        })\r\n        if(!found)\r\n                alert(\"No such User!!\");\r\n    }\r\n  }\r\n    return (\r\n        <>\r\n            {window.scrollTo(0, 0)}\r\n            <div className='Signin'><br></br>\r\n                <div className='Signin_form'>\r\n                    <h1>Sign In</h1><br></br><br></br><br></br>\r\n                    <form>\r\n                        <label htmlFor='User' className='indc'>Username</label><br></br>\r\n                        <input id='User' className='inpt contract' type='text' required  onChange={()=>{action('User')}}></input><br></br><br></br><br></br><br></br><br></br>\r\n                        \r\n                        <label htmlFor='Pass'className='indc'>Password</label><br></br>\r\n                        <input id='Pass' className='inpt contract' type='password' required onChange={()=>{action('Pass')}}></input><br></br><br></br><br></br><br></br><br></br>\r\n                        \r\n                        <div className='hold'>\r\n                        <button className='smbt' type='submit' onClick={verify}>Verify</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n      </>\r\n    );\r\n}\r\nexport default Signin;\r\n","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './dashstyle/frameStyle.css';\r\nclass Student extends Component{\r\n  menu = [{ index: 1, name: 'Tests',                link: '/dashboard/student/tests',     pic: 'images/test.png' },\r\n          {index: 2,  name:'Compare Yourself',      link:'/dashboard/student/compare',      pic:'images/compare.jpg'},\r\n          {index: 3,  name:'Assignments',           link:'/dashboard/student/assignments',         pic:'images/assgn.jpg' },\r\n          {index: 4,  name: 'Miscelleneous',        link: '/dashboard/student/miscellaneous', pic: 'images/misscl.png' },\r\n          {index: 5,  name: 'Contact',              link: '/dashboard/student/contact', pic: 'images/contact.jpg' },\r\n          {index: 6,  name: 'Test Room',         link: '/dashboard/student/testRoom',       pic: 'images/room.jpg'},\r\n      ];\r\n\r\n  elements=()=>{\r\n    const elm=this.menu.map((block)=>\r\n      <div className='holder' key={block.index}>\r\n        <NavLink exact to={block.link}>\r\n            <img src={block.pic} alt='effect'></img>\r\n            <div className='legend'>{block.name}</div>\r\n        </NavLink>\r\n      </div>\r\n    );\r\n    return elm;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {window.scrollTo(0, 0)}\r\n        <div className='frame'>\r\n            {this.elements()}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Student;\r\n","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './dashstyle/frameStyle.css';\r\nclass Admin extends Component{\r\n  menu=[{index: 1, name:'Add Student',         link:'/dashboard/admin/addstudent',      pic:'images/student.jpg'},\r\n        {index: 2, name:'Add New Test',        link:'/dashboard/admin/newTest',         pic:'images/add_test.jpg' },\r\n        { index: 3, name: 'See All Tests',     link: '/dashboard/admin/allTest',        pic: 'images/all_test.png' },\r\n        { index: 4, name: 'Remove Student',    link: '/dashboard/admin/rmvStd',         pic: 'images/rmvStd.jpg' },\r\n        { index: 5, name: 'Remove Test',       link: '/dashboard/admin/rmvTest',        pic: 'images/rmvTest.jpg' },\r\n        {index: 6,  name: 'Test Room',         link: '/dashboard/admin/testRoom',       pic: 'images/room.jpg'},\r\n      ];\r\n\r\n  elements = () => {\r\n    const elm=this.menu.map((block)=>\r\n      <div className='holder' key={block.index}>\r\n        <NavLink exact to={block.link}>\r\n            <img src={block.pic} alt='effect'></img>\r\n            <div className='legend'>{block.name}</div>\r\n        </NavLink>\r\n      </div>\r\n    );\r\n    return elm;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {window.scrollTo(0, 0)}\r\n        <div className='frame'>\r\n            {this.elements()}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Admin;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Student from './dashboard/student';\r\nimport Admin from './dashboard/admin';\r\nimport auth from './auth';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './styles/dashboardStyle.css';\r\n\r\nfunction Dashboard(){\r\n  const history=useHistory();\r\n  function checkLog(){\r\n    if(auth.isAuthenticated().id)\r\n      return true;\r\n    \r\n    history.push('/');\r\n    }\r\n    function signOut(){\r\n        auth.logout();\r\n    }\r\n  return (\r\n      <>\r\n        {checkLog() && (<div className='dashboard'>\r\n            <h1>Welcome {auth.isAuthenticated().id.substring(0,(auth.isAuthenticated().id.length-3))}</h1>\r\n            {auth.isAuthenticated().type === 'student' && (<Student></Student>)} \r\n            {auth.isAuthenticated().type === 'admin' && (<Admin></Admin>)}\r\n            <NavLink exact to='/' >\r\n                <button className=\"signOut\" onClick={() => { signOut() }}>Sign Out</button>\r\n            </NavLink>\r\n        </div>)}\r\n      </>\r\n  );\r\n}\r\nexport default Dashboard;\r\n","class Subjects{\r\n    constructor(){\r\n        this.currentUser={\r\n            \"Biology_X\": 0,\r\n            \"Chemistry_X\": 1,\r\n            \"Computer_X\": 2,\r\n            \"Mathematics_X\": 3,\r\n            \"Physics_X\": 4,\r\n        }\r\n    }\r\n    getSubjects(){\r\n        return this.currentUser;\r\n    }\r\n\r\n}\r\nexport default new Subjects()","import React, { useEffect, useState }  from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Subjects from '../subject';\r\nimport './dashstyle/addStudent.css';\r\nimport auth from '../auth';\r\nimport firebase from '../firebase';\r\nfunction AddStudent() {\r\n    const subjects = Subjects.getSubjects();\r\n    const history = useHistory();\r\n    const [members, getMembers] = useState([]);\r\n    useEffect(()=>{\r\n            const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"members\").get()\r\n            getMembers(data.docs.map(doc => doc.data()));\r\n            }\r\n            fetchData();\r\n    }, []);\r\n    function checkLog(){\r\n        if(auth.isAuthenticated().id)\r\n          return true;\r\n        \r\n        history.push('/');\r\n    }\r\n    function action(id){\r\n        const elm = document.getElementById(id);\r\n        if(elm.value === '')\r\n          elm.className = 'inpt contract';\r\n        else\r\n          elm.className = 'inpt expand';\r\n    }\r\n    function onRegister() {\r\n        const db = firebase.firestore();\r\n        const elm = document.getElementById(\"stdName\");\r\n        const sub = document.getElementsByClassName(\"subject\");\r\n        const std = document.getElementById(\"standard\").value;\r\n        members.forEach(member => {\r\n            if (member.Username.substring(0, (member.Username.length - 3)) === elm.value) {\r\n                if (member.Class !== std) {\r\n                    elm.value += \"_\" + std;\r\n                    alert(\"Student of same name but of different class already Present!!\\nChanged Username to \" + elm.value);\r\n                }\r\n            }\r\n        })\r\n        if (elm.value && sub.length && std) {\r\n            db.collection('members').doc(elm.value).set({\r\n                Username: elm.value + '@NE',\r\n                Password: 'student_' + std,\r\n                Class: std\r\n            }).then(() => {\r\n                let flag = 0;\r\n                for (let i = 0; i < sub.length; ++i) {\r\n                    if (sub[i].checked)\r\n                    {\r\n                        if (sub[i].value.split('_')[1] === std) {\r\n                            db.collection('Students').doc(sub[i].value).update({\r\n                                [elm.value]: true\r\n                            }).then(() => {\r\n                                alert(elm.value + \" Successfully Added to \" + sub[i].value + \"!!\")\r\n                                sub[i].checked = false\r\n                                elm.value = ''\r\n                            })\r\n                            flag = 1\r\n                        }\r\n                        else {\r\n                            flag = 2\r\n                            elm.value = ''\r\n                            sub[i].checked = false\r\n                            alert(\"Subject and Student Standard does not Match!!\\nAdd Unsuccessful!!\")\r\n                        }\r\n                            \r\n                    }\r\n                }\r\n                if (flag === 0)\r\n                alert(\"Please Choose ATLEAST one Subject!!\")\r\n            })\r\n        }\r\n        else {\r\n            if (elm.value === '')\r\n                alert(\"Please Enter Student Name!!\")\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {checkLog() && (<div className=\"studentHolder\">\r\n                <div className=\"stdAdd\">\r\n                    <label htmlFor=\"stdName\" className='indc'>Enter Student Name</label><br></br>\r\n                    <input id=\"stdName\" className='inpt contract' type=\"text\" placeholder=\"Eg. Abc\" required onChange={() => { action('stdName') }}></input><br></br><br></br>\r\n                    <label htmlFor=\"standard\" className='indc'>Select Class</label><br></br>\r\n                    <select id=\"standard\" className='dropdown'>\r\n                        <option value=\"IX\">Class IX</option>\r\n                        <option value=\"X\">Class X</option>\r\n                    </select><br></br><br></br><br></br><br></br>\r\n                    <label className='indc'>Choose Subject(s)</label><br></br>\r\n                    <div className=\"subjectHolder\">\r\n                        {Object.keys(subjects).map(subject => (\r\n                            <>\r\n                                <input key={subject} id={subject} className=\"subject checkInpt\" type=\"checkbox\" value={subject}></input>\r\n                                <label htmlFor={subject} className='indc chkLbl'>{subject}</label><br></br>\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <button className='smbt' onClick={onRegister}>Register</button>\r\n                        <br></br><br></br>\r\n                        <NavLink exact to=\"/dashboard\">\r\n                            <button className='smbt'>Dashboard</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n            </>    \r\n    );\r\n}\r\nexport default AddStudent;","import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Subjects from '../subject';\r\nimport './dashstyle/addStudent.css';\r\nimport auth from '../auth';\r\nimport firebase from '../firebase';\r\nfunction AddTest() {\r\n    const subjects = Subjects.getSubjects();\r\n    const history = useHistory();\r\n    const [tests, getTests] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n        const db = firebase.firestore();\r\n        const data = await db.collection(\"Tests\").get()\r\n        getTests(data.docs.map(doc => doc.data()));\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    \r\n    function checkLog(){\r\n        if(auth.isAuthenticated().id)\r\n          return true;\r\n        \r\n        history.push('/');\r\n    }\r\n    function action(id){\r\n        const elm = document.getElementById(id);\r\n        if(elm.value === '')\r\n          elm.className = 'inpt contract';\r\n        else\r\n          elm.className = 'inpt expand';\r\n    }\r\n    function onRegister() {\r\n        const db = firebase.firestore();\r\n        const elm = document.getElementById(\"tstName\");\r\n        const sub = document.getElementById(\"subject\");\r\n        const dt = document.getElementById(\"date\");\r\n        const tm = document.getElementById(\"time\");\r\n        const marks = document.getElementById(\"tstMarks\");\r\n        let flag = 0;\r\n        if (sub){\r\n            Object.keys(tests[subjects[sub.value]]).forEach(test => {\r\n                if (elm.value === test) {\r\n                    flag = 1;\r\n                    alert(\"Two Tests with same name is not allowed!!\\nPlease SET a diferent Test Name...\");\r\n                }\r\n            })\r\n            if(!flag)\r\n            {\r\n                if (elm.value && marks.value && dt.value && tm.value) {\r\n                db.collection(\"Tests\").doc(sub.value).update({\r\n                    [elm.value]: {\r\n                        maxMarks: marks.value,\r\n                        date: dt.value,\r\n                        time: tm.value,\r\n                    }\r\n                }).then(() => {\r\n                    alert(elm.value + \" Successfully Added!!\")\r\n                    elm.value = '';\r\n                    marks.value = '';\r\n                    dt.value = '';\r\n                    tm.value = '';\r\n                    sub.value = '';\r\n                })\r\n                }\r\n                else {\r\n                    if (!elm.value)\r\n                        alert(\"Please Give a Test Title!!\")\r\n                    else if(!marks.value)\r\n                        alert(\"Please Provide the Maximum Marks!!\")\r\n                    else if(!dt.value)\r\n                        alert(\"Please Provide a valid Date\")\r\n                    else\r\n                        alert(\"Please Provide a valid Time!\")\r\n                }\r\n            }\r\n        }\r\n        else\r\n            alert(\"Please Choose a Subject!!\")\r\n    }\r\n    return (\r\n            <>\r\n            {checkLog() && (<div className=\"studentHolder\">\r\n                <div className=\"stdAdd\">\r\n                    <label htmlFor=\"tstName\" className='indc'>Enter Test Name</label><br></br>\r\n                    <input id=\"tstName\" className='inpt contract' type=\"text\" placeholder=\"Eg. Prep Check Test - 1\" required onChange={() => { action('tstName') }}></input><br></br><br></br>\r\n                    <label htmlFor=\"tstMarks\" className='indc'>Enter Full Marks</label><br></br>\r\n                    <input id=\"tstMarks\" className='inpt contract' type=\"number\" placeholder=\"Eg. 100\" required onChange={() => { action('tstMarks') }}></input><br></br><br></br>\r\n                    <label htmlFor=\"date\" className='indc'>Enter Date</label><br></br>\r\n                    <input id=\"date\" className='inpt expand' type=\"date\" required ></input><br></br><br></br>\r\n                    <label htmlFor=\"time\" className='indc'>Enter Time</label><br></br>\r\n                    <input id=\"time\" className='inpt expand' type=\"time\" required ></input><br></br><br></br>\r\n                    <label htmlFor=\"subject\" className='indc'>Choose Subject</label><br></br>\r\n                    <select id=\"subject\" className='dropdown'>\r\n                        <option value=\"\">Choose</option>\r\n                        {Object.keys(subjects).map(subject => (\r\n                            <option key={subject} value={subject}>{subject}</option>\r\n                        ))}\r\n                    </select><br></br><br></br><br></br><br></br><br></br><br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <button className='smbt' onClick={onRegister}>Register</button>\r\n                        <br></br><br></br>\r\n                        <NavLink exact to=\"/dashboard\">\r\n                            <button className='smbt'>Dashboard</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n            </>    \r\n    );\r\n}\r\nexport default AddTest;","class Students{\r\n    constructor(){\r\n        this.currentUser=[]\r\n    }\r\n    setStudents(students) {\r\n        this.currentUser=Object.keys(students).map(student => (\r\n            student\r\n        ))\r\n    }\r\n    getStudents(){\r\n        return this.currentUser;\r\n    }\r\n\r\n}\r\nexport default new Students()","class Tests{\r\n    constructor(){\r\n        this.currentTest = {\r\n            name: '',\r\n            subject:'',\r\n            testDetails: '',\r\n            total:''\r\n        }\r\n    }\r\n    setTest(tesName, test,subject,exam) {\r\n        this.currentTest.name = tesName;\r\n        this.currentTest.subject = subject;\r\n        this.currentTest.testDetails = test;\r\n        this.currentTest.total = exam;\r\n    }\r\n    // setSelective(exam) {\r\n    //     this.currentTest.total = exam;\r\n    // }\r\n    getTest(){\r\n        return this.currentTest;\r\n    }\r\n\r\n}\r\nexport default new Tests()","import Students from './student'\r\nclass Sort{\r\n    reOrderTests(exam) {\r\n        function processTime(time) {\r\n            let time1 = time.split(':')\r\n            let time2 = time1[0].split('-')\r\n            return (time2[0] + time2[1] + time2[2] + time1[1])\r\n        }\r\n        let testArray = []\r\n        let timeStem = []\r\n        let testName = []\r\n        let arrangedTests = {}\r\n        let temp\r\n        Object.keys(exam).forEach(thisTest => {\r\n            testArray.push(exam[thisTest])\r\n            testName.push(thisTest)\r\n        })\r\n        for (let i = 1; i < testArray.length; ++i) {\r\n            for (let j = 0; j < testArray.length - i; ++j) {\r\n                timeStem[0] = parseInt(processTime(testArray[j].date + testArray[j].time))\r\n                timeStem[1] = parseInt(processTime(testArray[j + 1].date + testArray[j + 1].time))\r\n                if (timeStem[0] < timeStem[1]) {\r\n                    temp = testArray[j]\r\n                    testArray[j] = testArray[j + 1]\r\n                    testArray[j + 1] = temp\r\n\r\n                    temp = testName[j]\r\n                    testName[j] = testName[j + 1]\r\n                    testName[j + 1] = temp\r\n                }\r\n            }\r\n        }\r\n        temp = 0\r\n        testArray.forEach(thisTest => {\r\n            arrangedTests ={ ...arrangedTests,[testName[temp++]]:thisTest}\r\n        }) \r\n        return arrangedTests\r\n    }\r\n\r\n    reOdrderStudent(testDetails) {\r\n        let studentName = []\r\n        let studentMarks = []\r\n        let arranged = {}\r\n        let flag=0\r\n        Object.keys(testDetails).forEach(stud => {\r\n            if (stud !== 'ANONYMOUS' && stud !== 'date' && stud !== 'time' && stud !== 'maxMarks') {\r\n                studentName.push(stud)\r\n                studentMarks.push(testDetails[stud])\r\n                if (testDetails[stud])\r\n                    flag = 1;\r\n            }\r\n        })\r\n        if (flag){let temp\r\n        for (let i = 1; i < studentMarks.length; ++i) {\r\n            for (let j = 0; j < studentMarks.length - i; ++j){\r\n                if (studentMarks[j] < studentMarks[j + 1]) {\r\n                    temp = studentMarks[j]\r\n                    studentMarks[j] = studentMarks[j + 1]\r\n                    studentMarks[j + 1] = temp\r\n\r\n                    temp = studentName[j]\r\n                    studentName[j] = studentName[j + 1]\r\n                    studentName[j + 1] = temp\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < studentMarks.length; ++i)\r\n            arranged={...arranged, [studentName[i]]:studentMarks[i]}\r\n        Students.setStudents(arranged)}\r\n    }\r\n}\r\nexport default new Sort()","import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport './dashstyle/allTest.css';\r\nimport Subjects from '../subject';\r\nimport Students from '../student';\r\nimport Tests from '../test';\r\nimport Sort from '../sort';\r\nimport auth from '../auth';\r\nimport firebase from '../firebase';\r\nfunction AllTest() {\r\n    const [tests, getTests] = useState([]);\r\n    const [students, getStud] = useState([]);\r\n\r\n    const subjects = Subjects.getSubjects();\r\n    \r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n            const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"Tests\").get()\r\n            getTests(data.docs.map(doc => doc.data()));\r\n            }\r\n            fetchData();\r\n    }, []);\r\n    useEffect(()=>{\r\n            const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"Students\").get()\r\n            getStud(data.docs.map(doc => doc.data()));\r\n            }\r\n            fetchData();\r\n    }, []);\r\n    function checkLog() {\r\n        if(auth.isAuthenticated().id)\r\n          return true;\r\n        history.push('/');\r\n    }\r\n    function setHolderStyle(elm) {\r\n        const holder = elm.style\r\n        holder.width = \"50%\"\r\n        holder.height = \"100px\"\r\n        holder.border = \"outset\"\r\n        holder.margin = \"10px\"\r\n        holder.padding = \"10px\"\r\n        holder.borderRadius = \"10px\"\r\n        holder.boxShadow = \"5px 5px 2px grey\"\r\n        holder.overflow = \"hidden\"\r\n        holder.textAlign = \"center\"\r\n        holder.fontSize = \"25px\"\r\n    }\r\n    function setErrMessageStyle(elm) {\r\n        const holder = elm.style\r\n        holder.width = \"50%\"\r\n        holder.height = \"300px\"\r\n        holder.border = \"outset\"\r\n        holder.margin = \"10px\"\r\n        holder.padding = \"10px\"\r\n        holder.borderRadius = \"10px\"\r\n        holder.boxShadow = \"5px 5px 2px grey\"\r\n        holder.overflow = \"hidden\"\r\n        holder.textAlign = \"center\"\r\n        holder.fontSize = \"25px\"\r\n    }\r\n    function arrangeHtmlElements(exam, subject) {\r\n        let accumulate = ``\r\n        let ArrangedExam=Sort.reOrderTests(exam)\r\n        let examination = Object.keys(ArrangedExam)\r\n        examination.map((block) => (\r\n            `<div id=\"${block}\" className='holder' key=\"${block}\" style=\"width: 200px;\">\r\n                    <div    className='legend'\r\n                            style=\"cursor: pointer; padding-top: 30px;\">\r\n                        ${block}\r\n                    </div>\r\n            </div>\r\n            `\r\n        )).forEach(getHtml => {\r\n            accumulate += getHtml;\r\n        })\r\n        document.getElementById(\"lets\").innerHTML = accumulate;\r\n        examination.forEach((doIt) => {\r\n            document.getElementById(doIt).addEventListener(\"click\", function () {\r\n                Tests.setTest(doIt,exam[doIt],subject,exam);\r\n                history.push('/dashboard/admin/displayMarks');\r\n            })\r\n            setHolderStyle(document.getElementById(doIt))\r\n        })\r\n    }\r\n    function getAllTests() {\r\n        const elm = document.getElementById(\"subject\").value;\r\n        if (elm) {\r\n            let exams = tests.map(test => (\r\n                test\r\n            ))\r\n            Students.setStudents(students[subjects[elm]])\r\n            if (Object.keys(exams[subjects[elm]]).length)\r\n                arrangeHtmlElements(exams[subjects[elm]], elm);\r\n            else {\r\n                document.getElementById(\"lets\").innerHTML = `<div id=\"errMessage\" className='holder' style=\"width: 200px;\">\r\n                                                                <div   className='legend'\r\n                                                                        style=\"cursor: pointer; padding-top: 30px;\">\r\n                                                                    Hey <b>${auth.isAuthenticated().id.substring(0, (auth.isAuthenticated().id.length - 3))}</b>,<br></br>\r\n                                                                    Unfortunately, NO Tests found in <b>${elm}</b><br></br>\r\n                                                                    Please ADD a Test from 'Add New Test',\r\n                                                                </div>\r\n                                                            </div>`\r\n                setErrMessageStyle(document.getElementById(\"errMessage\"))\r\n            }\r\n        }\r\n        else {\r\n            document.getElementById(\"lets\").innerHTML = '';\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {window.scrollTo(0, 0)}\r\n            {checkLog() && (<div className=\"testHolder\">\r\n                <div className=\"alltst\">\r\n                    <label htmlFor=\"subject\" className='indc'>Choose Subject</label><br></br>\r\n                    <select id=\"subject\" className='dropdown' onChange={getAllTests}>\r\n                        <option value=\"\">Choose</option>\r\n                        {Object.keys(subjects).map(subject => (\r\n                            <option key={subject} value={subject}>{subject}</option>\r\n                        ))}\r\n                    </select><br></br><br></br>\r\n                    <div id=\"lets\" className='displayHolder'></div>\r\n                    <br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <NavLink exact to=\"/dashboard\">\r\n                            <button className='smbt'>Dashboard</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </div>)}\r\n        </>    \r\n    );\r\n}\r\nexport default AllTest;","import React from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Students from '../student';\r\nimport Tests from '../test';\r\nimport Sort from '../sort'\r\nimport auth from '../auth';\r\nimport firebase from '../firebase';\r\nimport './dashstyle/displayMarksStyle.css';\r\nfunction DisplayMarks() {\r\n    const students = Students.getStudents()\r\n    const test = Tests.getTest()\r\n    const history=useHistory();\r\n    function checkLog() {\r\n        if(auth.isAuthenticated().id)\r\n          return true;\r\n        \r\n        history.push('/');\r\n    }\r\n    function updateScore() {\r\n        const db = firebase.firestore();\r\n        students.forEach(student => {\r\n            test.testDetails[student] = parseInt(document.getElementById(student).value);\r\n        })\r\n        test.total[test.name]=test.testDetails\r\n        let update = test.total;\r\n        db.collection(\"Tests\").doc(test.subject).update(\r\n            update\r\n        ).then(() => {\r\n            alert(\" Successfully Updated!!\")\r\n            document.getElementById('masker').style.display= \"none\";\r\n        })\r\n    }\r\n    function doUnmask(student) {\r\n        document.getElementById('masker').style.display = \"block\";\r\n        const elm = document.getElementById(student);\r\n        if (parseInt(elm.value) > (test.testDetails.maxMarks)) {\r\n            alert(student + \"'s marks exceeding Maximum Marks of \" + test.name+\"\\nFull Marks of \"+test.name+\": \"+test.testDetails.maxMarks);\r\n            elm.value = test.testDetails.maxMarks;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {window.scrollTo(0, 0)}\r\n            {checkLog() && <div className=\"studentHolder\">\r\n                <div className=\"alltst\" >\r\n                    <h2 className='indc'>{test.name}</h2>\r\n                    <div className=\"marksHolder\">\r\n                        <div className=\"HolderSth\">\r\n                        {Sort.reOdrderStudent(test.testDetails)}\r\n                            <table>\r\n                                {students.map(student => (\r\n                                    <tr key={student}>\r\n                                        <td className=\"Column\"><label className='indc' htmlFor={student}>{student}</label></td>\r\n                                        <td className=\"Column\"><input className='inpt expand' id={student} type=\"number\" defaultValue={(test.testDetails[student]) ? test.testDetails[student] : 0} onChange={() => { doUnmask(student) }} ></input></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </table>\r\n                        </div><br></br>\r\n                        <div id=\"masker\" className=\"buttonHolder\" style={{ display: \"none\" }}>\r\n                            <div  className='smbt modify' onClick={updateScore}>Update</div>\r\n                        </div>\r\n                    </div>\r\n                    <br></br><br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <NavLink exact to=\"/dashboard/admin/allTest\">\r\n                            <button className='smbt'>Back</button>\r\n                        </NavLink>\r\n                    </div><br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <NavLink exact to=\"/dashboard\">\r\n                            <button className='smbt'>Dashboard</button>\r\n                        </NavLink>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n            }\r\n        </>    \r\n    );\r\n}\r\nexport default DisplayMarks;","import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport './dashstyle/allTest.css';\r\nimport Subjects from '../subject';\r\nimport Students from '../student';\r\nimport Sort from '../sort'\r\nimport auth from '../auth';\r\nimport firebase from '../firebase';\r\nfunction Std_testMarks() {\r\n    const [tests, getTests] = useState([]);\r\n    const [students, getStud] = useState([]);\r\n\r\n    const subjects = Subjects.getSubjects();\r\n    \r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n            const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"Tests\").get()\r\n            getTests(data.docs.map(doc => doc.data()));\r\n            }\r\n            fetchData();\r\n    }, []);\r\n    useEffect(()=>{\r\n            const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"Students\").get()\r\n            getStud(data.docs.map(doc => doc.data()));\r\n            }\r\n            fetchData();\r\n    }, []);\r\n    function checkLog() {\r\n        if(auth.isAuthenticated().id)\r\n          return true;\r\n        history.push('/');\r\n    }\r\n    function setHolderStyle(elm) {\r\n        const holder = elm.style\r\n        holder.width = \"50%\"\r\n        holder.height = \"100px\"\r\n        holder.border = \"outset\"\r\n        holder.margin = \"10px\"\r\n        holder.padding = \"10px\"\r\n        holder.borderRadius = \"10px\"\r\n        holder.boxShadow = \"5px 5px 2px grey\"\r\n        holder.overflow = \"hidden\"\r\n        holder.textAlign = \"center\"\r\n        holder.fontSize = \"25px\"\r\n    }\r\n    function setErrMessageStyle(elm) {\r\n        const holder = elm.style\r\n        holder.width = \"50%\"\r\n        holder.height = \"300px\"\r\n        holder.border = \"outset\"\r\n        holder.margin = \"10px\"\r\n        holder.padding = \"10px\"\r\n        holder.borderRadius = \"10px\"\r\n        holder.boxShadow = \"5px 5px 2px grey\"\r\n        holder.overflow = \"hidden\"\r\n        holder.textAlign = \"center\"\r\n        holder.fontSize = \"25px\"\r\n    }\r\n    function arrangeHtmlElements(exam) {\r\n        let accumulate = ``\r\n        let ArrangedExam=Sort.reOrderTests(exam)\r\n        let examination = Object.keys(ArrangedExam)\r\n        function getMarks(block) {\r\n            let num = 0;\r\n            Object.keys(exam[block]).forEach(name => {\r\n                if (name === (auth.isAuthenticated().id.substring(0, auth.isAuthenticated().id.length - 3))) {\r\n                    num= exam[block][name]\r\n                }\r\n            })\r\n            return num;\r\n        }\r\n        if (examination.length) {\r\n            examination.map((block) => (\r\n                `<div id=\"${block}\" className='holder' key=\"${block}\" style=\"width: 200px;\">\r\n                        <div    className='legend'\r\n                                style=\"cursor: pointer; padding-top: 30px; text-allign: center;\">\r\n                            <table>\r\n                                <tr style=\"text-allign: center;\">\r\n                                    <td style=\"padding-left: 13%;width:350px;\">${block}</td>\r\n                                    <td style=\"padding-left: 20%; width: 275px;\">${getMarks(block)} ON <b>${exam[block].maxMarks}</b></td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                </div>\r\n                `\r\n            )).forEach(getHtml => {\r\n                accumulate += getHtml;\r\n            })\r\n            document.getElementById(\"lets\").innerHTML = accumulate;\r\n            examination.forEach((doIt) => {\r\n                setHolderStyle(document.getElementById(doIt))\r\n            })\r\n        }\r\n        else {\r\n            document.getElementById(\"lets\").innerHTML =`<div id=\"errMessage\" className='holder' style=\"width: 200px;\">\r\n                                                                <div   className='legend'\r\n                                                                        style=\"cursor: pointer; padding-top: 30px;\">\r\n                                                                    No Tests Registered Yet!!<br></br>\r\n                                                                    You would be able to see the list of Tests only after it is added by your Faculty!<br></br>\r\n                                                                    Contact Your Faculty for any Discrepancy...\r\n                                                                </div>\r\n                                                            </div>`\r\n                setErrMessageStyle(document.getElementById(\"errMessage\"))\r\n        }\r\n        \r\n    }\r\n    function getAllTests() {\r\n        const elm = document.getElementById(\"subject\");\r\n        if (elm.value) {\r\n            let exams = tests.map(test => (\r\n                test\r\n            ))\r\n            Students.setStudents(students[subjects[elm.value]])\r\n            const stud = Students.getStudents()\r\n            let flag = 0;\r\n            stud.forEach(st => {\r\n                if (st === auth.isAuthenticated().id.substring(0, (auth.isAuthenticated().id.length - 3)))\r\n                    flag = 1;\r\n            })\r\n            if (flag === 1)\r\n                arrangeHtmlElements(exams[subjects[elm.value]]);\r\n            else {\r\n                document.getElementById(\"lets\").innerHTML = `<div id=\"errMessage\" className='holder' style=\"width: 200px;\">\r\n                                                            <div   className='legend'\r\n                                                                    style=\"cursor: pointer; padding-top: 30px;\">\r\n                                                                Hey <b>${auth.isAuthenticated().id.substring(0, (auth.isAuthenticated().id.length - 3))}</b>,<br></br>\r\n                                                                Unfortunately, you are NOT registered to <b>${elm.value}</b><br></br>\r\n                                                                Get yourself in, NOW!! <br></br>\r\n                                                                <i>Contact our ADMINS</i>\r\n                                                            </div>\r\n                                                        </div>`\r\n                setErrMessageStyle(document.getElementById(\"errMessage\"))\r\n            }\r\n        }\r\n        else {\r\n            document.getElementById(\"lets\").innerHTML = ''\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {window.scrollTo(0, 0)}\r\n            {checkLog() && (<div className=\"testHolder\">\r\n                <div className=\"alltst\">\r\n                    <label htmlFor=\"subject\" className='indc'>Choose Subject</label><br></br>\r\n                    <select id=\"subject\" className='dropdown' onChange={getAllTests}>\r\n                        <option value=\"\">Choose</option>\r\n                        {Object.keys(subjects).map(subject => (\r\n                            <option key={subject} value={subject}>{subject}</option>\r\n                        ))}\r\n                    </select><br></br><br></br>\r\n                    <div id=\"lets\" className='displayHolder'></div>\r\n                    <br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <NavLink exact to=\"/dashboard\">\r\n                            <button className='smbt'>Dashboard</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </div>)}\r\n        </>    \r\n    );\r\n}\r\nexport default Std_testMarks;","import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport './dashstyle/allTest.css';\r\nimport Subjects from '../subject';\r\nimport Students from '../student';\r\nimport Tests from '../test';\r\nimport Sort from '../sort'\r\nimport auth from '../auth';\r\nimport firebase from '../firebase';\r\nfunction Std_compareMarks() {\r\n    const [tests, getTests] = useState([]);\r\n    const [students, getStud] = useState([]);\r\n\r\n    const subjects = Subjects.getSubjects();\r\n    \r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n            const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"Tests\").get()\r\n            getTests(data.docs.map(doc => doc.data()));\r\n            }\r\n            fetchData();\r\n    }, []);\r\n    useEffect(()=>{\r\n            const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"Students\").get()\r\n            getStud(data.docs.map(doc => doc.data()));\r\n            }\r\n            fetchData();\r\n    }, []);\r\n    function checkLog() {\r\n        if(auth.isAuthenticated().id)\r\n          return true;\r\n        history.push('/');\r\n    }\r\n    function setHolderStyle(elm) {\r\n        const holder = elm.style\r\n        holder.width = \"50%\"\r\n        holder.height = \"100px\"\r\n        holder.border = \"outset\"\r\n        holder.margin = \"10px\"\r\n        holder.padding = \"10px\"\r\n        holder.borderRadius = \"10px\"\r\n        holder.boxShadow = \"5px 5px 2px grey\"\r\n        holder.overflow = \"hidden\"\r\n        holder.textAlign = \"center\"\r\n        holder.fontSize = \"25px\"\r\n    }\r\n    function setErrMessageStyle(elm) {\r\n        const holder = elm.style\r\n        holder.width = \"50%\"\r\n        holder.height = \"300px\"\r\n        holder.border = \"outset\"\r\n        holder.margin = \"10px\"\r\n        holder.padding = \"10px\"\r\n        holder.borderRadius = \"10px\"\r\n        holder.boxShadow = \"5px 5px 2px grey\"\r\n        holder.overflow = \"hidden\"\r\n        holder.textAlign = \"center\"\r\n        holder.fontSize = \"25px\"\r\n    }\r\n    function arrangeHtmlElements(exam, subject) {\r\n        let accumulate = ``\r\n        let ArrangedExam=Sort.reOrderTests(exam)\r\n        let examination = Object.keys(ArrangedExam)\r\n        if (examination.length) {\r\n            examination.map((block) => (\r\n                `<div id=\"${block}\" className='holder' key=\"${block}\" style=\"width: 200px;\">\r\n                        <div    className='legend'\r\n                                style=\"cursor: pointer; padding-top: 30px;\">\r\n                            ${block}\r\n                        </div>\r\n                </div>\r\n                `\r\n            )).forEach(getHtml => {\r\n                accumulate += getHtml;\r\n            })\r\n            document.getElementById(\"lets\").innerHTML = accumulate;\r\n            examination.forEach((doIt) => {\r\n                document.getElementById(doIt).addEventListener(\"click\", function () {\r\n                    Tests.setTest(doIt, exam[doIt], subject, exam);\r\n                    history.push('/dashboard/student/compareMarks');\r\n                })\r\n                setHolderStyle(document.getElementById(doIt))\r\n            })\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(\"lets\").innerHTML =`<div id=\"errMessage\" className='holder' style=\"width: 200px;\">\r\n                                                                <div   className='legend'\r\n                                                                        style=\"cursor: pointer; padding-top: 30px;\">\r\n                                                                    No Tests Registered Yet!!<br></br>\r\n                                                                    You would be able to see the list of Tests only after it is added by your Faculty!<br></br>\r\n                                                                    Contact Your Faculty for any Discrepancy...\r\n                                                                </div>\r\n                                                            </div>`\r\n                setErrMessageStyle(document.getElementById(\"errMessage\"))\r\n         }\r\n    }\r\n    function getAllTests() {\r\n        const elm = document.getElementById(\"subject\");\r\n        if (elm.value) {\r\n            let exams = tests.map(test => (\r\n                test\r\n            ))\r\n            Students.setStudents(students[subjects[elm.value]])\r\n            const stud = Students.getStudents()\r\n            let flag = 0;\r\n            stud.forEach(st => {\r\n                if (st === auth.isAuthenticated().id.substring(0, (auth.isAuthenticated().id.length - 3)))\r\n                    flag = 1;\r\n            })\r\n            if (flag === 1)\r\n                arrangeHtmlElements(exams[subjects[elm.value]], elm.value);\r\n            else {\r\n                document.getElementById(\"lets\").innerHTML = `<div id=\"errMessage\" className='holder' style=\"width: 200px;\">\r\n                                                                <div   className='legend'\r\n                                                                        style=\"cursor: pointer; padding-top: 30px;\">\r\n                                                                    Hey <b>${auth.isAuthenticated().id.substring(0, (auth.isAuthenticated().id.length - 3))}</b>,<br></br>\r\n                                                                    Unfortunately, you are NOT registered to <b>${elm.value}</b><br></br>\r\n                                                                    Get yourself in, NOW!! <br></br>\r\n                                                                    <i>Contact our ADMINS</i>\r\n                                                                </div>\r\n                                                            </div>`\r\n                setErrMessageStyle(document.getElementById(\"errMessage\"))\r\n            }\r\n        }\r\n        else {\r\n            document.getElementById(\"lets\").innerHTML = ''\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {window.scrollTo(0, 0)}\r\n            {checkLog() && (<div className=\"testHolder\">\r\n                <div className=\"alltst\">\r\n                    <label htmlFor=\"subject\" className='indc'>Choose Subject</label><br></br>\r\n                    <select id=\"subject\" className='dropdown' onChange={getAllTests}>\r\n                        <option value=\"\">Choose</option>\r\n                        {Object.keys(subjects).map(subject => (\r\n                            <option key={subject} value={subject}>{subject}</option>\r\n                        ))}\r\n                    </select><br></br><br></br>\r\n                    <div id=\"lets\" className='displayHolder'></div>\r\n                    <br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <NavLink exact to=\"/dashboard\">\r\n                            <button className='smbt'>Dashboard</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </div>)}\r\n        </>    \r\n    );\r\n}\r\nexport default Std_compareMarks;","import React from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Students from '../student';\r\nimport Tests from '../test';\r\nimport Sort from '../sort'\r\nimport auth from '../auth';\r\nimport './dashstyle/compareMarksStyle.css';\r\nfunction CompareMarks() {\r\n    const students = Students.getStudents()\r\n    const test = Tests.getTest()\r\n    const history=useHistory();\r\n    function checkLog() {\r\n        if(auth.isAuthenticated().id)\r\n          return true;\r\n        \r\n        history.push('/');\r\n    }\r\n    return (\r\n        <>\r\n            {checkLog() && <div className=\"studentHolder\">\r\n                <div className=\"alltst\" >\r\n                    <table>\r\n                        <tr>\r\n                            <td><h2 className='indc' >{test.name}</h2></td>\r\n                            <td><span className='indc control'><b>({test.testDetails.maxMarks})</b></span></td>\r\n                        </tr>\r\n                    </table>\r\n                    {Sort.reOdrderStudent(test.testDetails)}\r\n                    <div className=\"marksHolder\">\r\n                        <div className=\"nameHolder\">\r\n                            <table>\r\n                                {students.map(student => (student !== 'ANONYMOUS') ? (\r\n                                    <tr key={student}>\r\n                                        <td className=\"Column\"><label className='indc' htmlFor={student}>{student}</label></td>\r\n                                        <td className=\"Column marks\"><span className='indc'>(Marks: {(test.testDetails[student]) ? test.testDetails[student] : 0})</span></td>\r\n                                        <td className=\"Column grphHolder\"><div className='mask'></div><input className='graph' id={student} type=\"range\" min=\"0\" max=\"100\" value={(test.testDetails[student]) ? (test.testDetails[student]/test.testDetails.maxMarks)*100 : 0} readOnly={true}></input></td>\r\n                                    </tr>\r\n                                ):<></>)}\r\n                            </table>\r\n                        </div><br></br>\r\n                    </div>\r\n                    <br></br><br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <NavLink exact to=\"/dashboard/student/compare\">\r\n                            <button className='smbt'>Back</button>\r\n                        </NavLink>\r\n                    </div><br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <NavLink exact to=\"/dashboard\">\r\n                            <button className='smbt'>Dashboard</button>\r\n                        </NavLink>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n            }\r\n        </>    \r\n    );\r\n}\r\nexport default CompareMarks;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './styles/comingSoonStyle.css';\r\nfunction ComingSoon() {\r\n    return (\r\n        <>\r\n            <div className=\"studentHolder\">\r\n                <div className=\"soon\">\r\n                    <h1>Comming Soon!!</h1>\r\n                </div>\r\n                <div className=\"buttonHolder\">\r\n                    <NavLink exact to=\"/dashboard\">\r\n                        <button className='smbt'>Dashboard</button>\r\n                    </NavLink>\r\n                </div> \r\n            </div>\r\n        </>    \r\n    );\r\n}\r\nexport default ComingSoon;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './dashstyle/contact.css';\r\nfunction Contact() {\r\n    return (\r\n        <>\r\n            <div className=\"testHolder\">\r\n                <div className=\"alltst\">\r\n                    <div className=\"contact\">\r\n                        <table>\r\n                            <tr>\r\n                                <td><h2>BISWADIP SANFUI</h2></td>\r\n                                <div className=\"details\">\r\n                                    <tr>\r\n                                        <td><h3>Contact: 9330403449</h3></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><h3>E-Mail: navasikshan20@gmail.com</h3></td>\r\n                                    </tr>\r\n                                </div>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><h2>SOUMYANETRA PAL</h2></td>\r\n                                <div className=\"details\">\r\n                                    <tr>\r\n                                        <td><h3>Contact: 6290688584</h3></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><h3>E-Mail: navasikshan20@gmail.com</h3></td>\r\n                                    </tr>\r\n                                </div>\r\n                            </tr>\r\n                            \r\n                        </table>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <NavLink exact to=\"/dashboard\">\r\n                            <button className='smbt'>Dashboard</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </div>\r\n        </>    \r\n    );\r\n}\r\nexport default Contact;","import React, { useEffect, useState }  from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Subjects from '../subject';\r\nimport Students from '../student';\r\nimport './dashstyle/addStudent.css';\r\nimport auth from '../auth';\r\nimport firebase from '../firebase';\r\nfunction RmvStudent() {\r\n    const [students, getStud] = useState([]);\r\n\r\n    const subjects = Subjects.getSubjects();\r\n    \r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n            const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"Students\").get()\r\n            getStud(data.docs.map(doc => doc.data()));\r\n            }\r\n            fetchData();\r\n    }, []);\r\n    function checkLog() {\r\n        if(auth.isAuthenticated().id)\r\n          return true;\r\n        history.push('/');\r\n    }\r\n    function setHolderStyle(elm) {\r\n        const holder = elm.style\r\n        holder.width = \"50%\"\r\n        holder.height = \"100px\"\r\n        holder.border = \"outset\"\r\n        holder.margin = \"10px\"\r\n        holder.padding = \"10px\"\r\n        holder.borderRadius = \"10px\"\r\n        holder.boxShadow = \"5px 5px 2px grey\"\r\n        holder.overflow = \"hidden\"\r\n        holder.textAlign = \"center\"\r\n        holder.fontSize = \"25px\"\r\n    }\r\n    function setErrMessageStyle(elm) {\r\n        const holder = elm.style\r\n        holder.width = \"50%\"\r\n        holder.height = \"300px\"\r\n        holder.border = \"outset\"\r\n        holder.margin = \"10px\"\r\n        holder.padding = \"10px\"\r\n        holder.borderRadius = \"10px\"\r\n        holder.boxShadow = \"5px 5px 2px grey\"\r\n        holder.overflow = \"hidden\"\r\n        holder.textAlign = \"center\"\r\n        holder.fontSize = \"25px\"\r\n    }\r\n    function cancel() {\r\n        document.getElementById(\"confirm\").style.display = \"none\"\r\n    }\r\n    function remove() {\r\n        document.getElementById(\"confirm\").style.display = \"none\"\r\n        const db = firebase.firestore();\r\n        let name = document.getElementById(\"name\").value\r\n        let subject= document.getElementById(\"subject\").value\r\n        let removedSet={}\r\n        Object.keys(students[subjects[subject]]).forEach((student) => {\r\n            if (student !== name)\r\n                removedSet ={...removedSet, [student]:true}\r\n        })\r\n        db.collection(\"Students\").doc(subject).set(removedSet).then(() => {\r\n            alert(name + \" Successfully Removed from \" + subject + \"!!\")\r\n            Students.setStudents(removedSet)\r\n            arrangeHtmlElements(Object.keys(removedSet), subject)\r\n        }).catch(() => {\r\n            alert(name + \" Remove Unsuccessful!!\")\r\n        })\r\n    }\r\n    function removeStudent(name) {\r\n        document.getElementById(\"confirm\").style.display = \"block\"\r\n        document.getElementById(\"name\").value = name\r\n    }\r\n    function arrangeHtmlElements(shisya, subject) {\r\n        let accumulate = ``\r\n        shisya.map((block) => (\r\n            `<div id=\"${block}\" className='holder' key=\"${block}\" style=\"width: 200px;\">\r\n                    <div    className='legend'\r\n                            style=\"cursor: pointer; padding-top: 30px;\">\r\n                        ${block}\r\n                    </div>\r\n            </div>\r\n            `\r\n        )).forEach(getHtml => {\r\n            accumulate += getHtml;\r\n        })\r\n        document.getElementById(\"lets\").innerHTML = accumulate;\r\n        shisya.forEach((doIt) => {\r\n            document.getElementById(doIt).addEventListener(\"click\", function () {\r\n                removeStudent(doIt);\r\n            })\r\n            setHolderStyle(document.getElementById(doIt))\r\n        })\r\n    }\r\n    function getAllTests() {\r\n        const elm = document.getElementById(\"subject\");\r\n        if (elm.value) {\r\n            Students.setStudents(students[subjects[elm.value]])\r\n            let sishya=Students.getStudents()\r\n            if (sishya.length)\r\n                arrangeHtmlElements(sishya, elm.value);\r\n            else {\r\n                document.getElementById(\"lets\").innerHTML = `<div id=\"errMessage\" className='holder' style=\"width: 200px;\">\r\n                                                                <div   className='legend'\r\n                                                                        style=\"cursor: pointer; padding-top: 30px;\">\r\n                                                                    Hey <b>${auth.isAuthenticated().id.substring(0, (auth.isAuthenticated().id.length - 3))}</b>,<br></br>\r\n                                                                    Unfortunately, NO Students found in <b>${elm.value}</b><br></br>\r\n                                                                    Please ADD a Student from 'Add Student',\r\n                                                                </div>\r\n                                                            </div>`\r\n                setErrMessageStyle(document.getElementById(\"errMessage\"))\r\n            }\r\n        }\r\n        else\r\n            document.getElementById(\"lets\").innerHTML = '';\r\n    }\r\n    return (\r\n        <>\r\n            {window.scrollTo(0, 0)}\r\n            {checkLog() && (<div className=\"testHolder\">\r\n                <div className=\"alltst\">\r\n                    <label htmlFor=\"subject\" className='indc'>Choose Subject</label><br></br>\r\n                    <select id=\"subject\" className='dropdown' onChange={getAllTests}>\r\n                        <option value=\"\">Choose</option>\r\n                        {Object.keys(subjects).map(subject => (\r\n                            <option key={subject} value={subject}>{subject}</option>\r\n                        ))}\r\n                    </select><br></br><br></br>\r\n                    <div id=\"lets\" className='displayHolder'></div>\r\n                    <br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <NavLink exact to=\"/dashboard\">\r\n                            <button className='smbt'>Dashboard</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div id=\"confirm\" className=\"prevent\">\r\n                    <div className=\"confirmBox\">\r\n                        <div>\r\n                            <h2>Are you sure you want to Remove?</h2>\r\n                            <h3>Removing would lead to removal of all details of the Student!!</h3>\r\n                            <input id=\"name\" type=\"text\" style={{ display:\"none\"}}></input>\r\n                            <div className=\"btn\">\r\n                                <span className=\"space\">\r\n                                    <button className='smbt' onClick={remove}>Remove</button>\r\n                                </span>\r\n                                <button className='smbt' onClick={cancel}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n        </>    \r\n    );\r\n}\r\nexport default RmvStudent;","import React, { useEffect, useState }  from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Subjects from '../subject';\r\nimport Students from '../student';\r\nimport Sort from '../sort'\r\nimport Tests from '../test';\r\nimport './dashstyle/addStudent.css';\r\nimport auth from '../auth';\r\nimport firebase from '../firebase';\r\nfunction RmvTest() {\r\n    const [students, getStud] = useState([]);\r\n    const [tests, getTests] = useState([]);\r\n    const subjects = Subjects.getSubjects();\r\n    \r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n            const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"Students\").get()\r\n            getStud(data.docs.map(doc => doc.data()));\r\n            }\r\n            fetchData();\r\n    }, []);\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n        const db = firebase.firestore();\r\n        const data = await db.collection(\"Tests\").get()\r\n        getTests(data.docs.map(doc => doc.data()));\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    function checkLog() {\r\n        if(auth.isAuthenticated().id)\r\n          return true;\r\n        history.push('/');\r\n    }\r\n    function setHolderStyle(elm) {\r\n        const holder = elm.style\r\n        holder.width = \"50%\"\r\n        holder.height = \"100px\"\r\n        holder.border = \"outset\"\r\n        holder.margin = \"10px\"\r\n        holder.padding = \"10px\"\r\n        holder.borderRadius = \"10px\"\r\n        holder.boxShadow = \"5px 5px 2px grey\"\r\n        holder.overflow = \"hidden\"\r\n        holder.textAlign = \"center\"\r\n        holder.fontSize = \"25px\"\r\n    }\r\n    function setErrMessageStyle(elm) {\r\n        const holder = elm.style\r\n        holder.width = \"50%\"\r\n        holder.height = \"300px\"\r\n        holder.border = \"outset\"\r\n        holder.margin = \"10px\"\r\n        holder.padding = \"10px\"\r\n        holder.borderRadius = \"10px\"\r\n        holder.boxShadow = \"5px 5px 2px grey\"\r\n        holder.overflow = \"hidden\"\r\n        holder.textAlign = \"center\"\r\n        holder.fontSize = \"25px\"\r\n    }\r\n    function cancel() {\r\n        document.getElementById(\"confirm\").style.display = \"none\"\r\n    }\r\n    function remove() {\r\n        document.getElementById(\"confirm\").style.display = \"none\"\r\n        const db = firebase.firestore();\r\n        let name = document.getElementById(\"name\").value\r\n        let subject= document.getElementById(\"subject\").value\r\n        let removedSet = {}\r\n        let tests = Tests.getTest()\r\n        Object.keys(tests.total).forEach((test) => {\r\n            if (test !== name)\r\n                removedSet ={...removedSet, [test]:tests.total[test]}\r\n        })\r\n        db.collection(\"Tests\").doc(subject).set(removedSet).then(() => {\r\n            alert(name + \" Successfully Removed from \" + subject + \"!!\\n YOU WILL BE NAVIGATED TO DASBOARD AFTER THIS!\")\r\n            history.push('/dashboard')\r\n        })\r\n    }\r\n    function removeTest(name) {\r\n        document.getElementById(\"confirm\").style.display = \"block\"\r\n        document.getElementById(\"name\").value = name\r\n    }\r\n    function arrangeHtmlElements(exam,subject) {\r\n        let accumulate = ``\r\n        let ArrangedExam=Sort.reOrderTests(exam)\r\n        let examination = Object.keys(ArrangedExam)\r\n        examination.map((block) => (\r\n            `<div id=\"${block}\" className='holder' key=\"${block}\" style=\"width: 200px;\">\r\n                    <div    className='legend'\r\n                            style=\"cursor: pointer; padding-top: 30px;\">\r\n                        ${block}\r\n                    </div>\r\n            </div>\r\n            `\r\n        )).forEach(getHtml => {\r\n            accumulate += getHtml;\r\n        })\r\n        document.getElementById(\"lets\").innerHTML = accumulate;\r\n        examination.forEach((doIt) => {\r\n            document.getElementById(doIt).addEventListener(\"click\", function () {\r\n                Tests.setTest(doIt,exam[doIt],subject,exam);\r\n                removeTest(doIt);\r\n            })\r\n            setHolderStyle(document.getElementById(doIt))\r\n        })\r\n    }\r\n    function getAllTests() {\r\n        const elm = document.getElementById(\"subject\");\r\n        let exams;\r\n        if (elm.value) {\r\n            exams = tests.map(test => (\r\n                    test\r\n            ))\r\n            Students.setStudents(students[subjects[elm.value]])\r\n            if (Object.keys(exams[subjects[elm.value]]).length)\r\n                arrangeHtmlElements(exams[subjects[elm.value]],elm.value);\r\n            else {\r\n                document.getElementById(\"lets\").innerHTML = `<div id=\"errMessage\" className='holder' style=\"width: 200px;\">\r\n                                                                <div   className='legend'\r\n                                                                        style=\"cursor: pointer; padding-top: 30px;\">\r\n                                                                    Hey <b>${auth.isAuthenticated().id.substring(0, (auth.isAuthenticated().id.length - 3))}</b>,<br></br>\r\n                                                                    Unfortunately, NO Tests found in <b>${elm.value}</b><br></br>\r\n                                                                    Please ADD a Test from 'Add New Test',\r\n                                                                </div>\r\n                                                            </div>`\r\n                setErrMessageStyle(document.getElementById(\"errMessage\"))\r\n            }\r\n        }\r\n        else\r\n            document.getElementById(\"lets\").innerHTML = '';\r\n    }\r\n    return (\r\n        <>\r\n            {checkLog() && (<div className=\"testHolder\">\r\n                <div className=\"alltst\">\r\n                    <label htmlFor=\"subject\" className='indc'>Choose Subject</label><br></br>\r\n                    <select id=\"subject\" className='dropdown' onChange={getAllTests}>\r\n                        <option value=\"\">Choose</option>\r\n                        {Object.keys(subjects).map(subject => (\r\n                            <option key={subject} value={subject}>{subject}</option>\r\n                        ))}\r\n                    </select><br></br><br></br>\r\n                    <div id=\"lets\" className='displayHolder'></div>\r\n                    <br></br>\r\n                    <div className=\"buttonHolder\">\r\n                        <NavLink exact to=\"/dashboard\">\r\n                            <button className='smbt'>Dashboard</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div id=\"confirm\" className=\"prevent\">\r\n                    <div className=\"confirmBox\">\r\n                        <div>\r\n                            <h2>Are you sure you want to Remove?</h2>\r\n                            <h3>Removing would lead to removal of all details of the Test!!</h3>\r\n                            <input id=\"name\" type=\"text\" style={{ display:\"none\"}}></input>\r\n                            <div className=\"btn\">\r\n                                <span className=\"space\">\r\n                                    <button className='smbt' onClick={remove}>Remove</button>\r\n                                </span>\r\n                                <button className='smbt' onClick={cancel}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n        </>    \r\n    );\r\n}\r\nexport default RmvTest;","import React from \"react\";\nimport {HashRouter as Router,Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header';\nimport Signin from './components/signIn';\nimport Dashboard from './components/dashboard';\nimport addStudent from './components/dashboard/addStudent';\nimport addTest from './components/dashboard/addTest';\nimport allTest from './components/dashboard/allTest';\nimport displayMarks from './components/dashboard/displayMarks';\nimport std_testMarks from './components/dashboard/std_testMarks';\nimport std_compareMarks from './components/dashboard/std_compareMarks';\nimport compareMarks from './components/dashboard/compareMarks';\nimport comingSoon from './components/comingSoon';\nimport contact from './components/dashboard/contact';\nimport removeStd from './components/dashboard/rmvStd';\nimport removeTst from './components/dashboard/rmvTst';\n\nfunction App() {\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <Header></Header>\n        <Switch>\n          <Route exact path='/' component={Signin}></Route>\n          <Route path='/dashboard' exact component={Dashboard}></Route>\n\n          <Route path='/dashboard/admin/addstudent' exact component={addStudent}></Route>\n          <Route path='/dashboard/admin/newTest' exact component={addTest}></Route>\n          <Route path='/dashboard/admin/allTest' exact component={allTest}></Route>\n          <Route path='/dashboard/admin/displayMarks' exact component={displayMarks}></Route>\n          <Route path='/dashboard/admin/rmvStd' exact component={removeStd}></Route>\n          <Route path='/dashboard/admin/rmvTest' exact component={removeTst}></Route>\n          <Route path='/dashboard/admin/testRoom' exact component={comingSoon}></Route>\n\n          <Route path='/dashboard/student/tests' exact component={std_testMarks}></Route>\n          <Route path='/dashboard/student/compare' exact component={std_compareMarks}></Route>\n          <Route path='/dashboard/student/compareMarks' exact component={compareMarks}></Route>\n          <Route path='/dashboard/student/contact' exact component={contact}></Route>\n          <Route path='/dashboard/student/testRoom' exact component={comingSoon}></Route>\n\n          <Route path='/dashboard/student/assignments' exact component={comingSoon}></Route>\n          <Route path='/dashboard/student/miscellaneous' exact component={comingSoon}></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\r\nimport './styles/footerStyle.css';\r\nclass Footer extends Component{\r\n  render() {\r\n    return (\r\n        <div className=\"foot\">\r\n            <h2>@Soumyanetra</h2>\r\n        </div> \r\n    );\r\n  }\r\n}\r\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport HashRouter from 'react-router-dom/BrowserRouter'\nimport Footer from './components/footer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <App />\n      <Footer />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}